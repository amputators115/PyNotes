# Операторы в Python

# Присвоение
# Арифметические: + - * /, %, //, **, ^
# Сравнения ==, !=, >, <, <=, >= Результатом будет True или False
# Логические not, and, or часто используются в условных конструкциях if else
# Текстовые операторы not, and, or, is, is not, in, not in

# Пример использования опертора is при опрделнии сопадают ли ссылки на объект

a = 10
b = a

c = a + b

print(a is b)
print(a is c)

# У операторов есть магические методы
# К примеру оператор == - 	__eq__()

a = [1, 2]
b = [1, 2]

print(a == b) # True потому что списки одинаковы
print(a.__eq__(b))
print(a.__eq__)  #Область памяти
print(id(a))
print(hex(id(a)))  # Область памяти  в 16-тиричной кодировке
print(a is b) # не равны та как занимают разные облатси памяти

# Функция dir() - выводит список имен, атрибутов, методов определенного объекта

print(dir(list))

# Бинарные и унарные операторы

# Унарные операторы состоят из одного операнда

my_num = 10
print(+my_num) # показываем что здесь число

my_num = 10
print(not my_num)  # отрицание

# Бинарные операторы  два операнда

a = 5
a + b
a += 1 #увеличение на опрделенное число и присовение новго значения перменной
a == b
a and b

# Инфиксная запись - оператор находиться между операторами

a = 5
a + b
a += 1  # увеличение на опрделенное число и присовение новго значения перменной
a == b
a or b
a > b

# Операторы in, not in



